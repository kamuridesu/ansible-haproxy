---
- name: Set proxy variables
  ansible.builtin.set_fact:
    proxy_port: "{{ lookup('env', 'PROXY_PORT') }}"
    proxy_host: "{{ lookup('env', 'PROXY_HOST') }}"

- name: Get backend configs
  ansible.builtin.set_fact:
    backends: "{{ backends | default([]) + [lookup('file', item) | from_json] }}"
  loop: "{{ query('fileglob', 'data/*.json') }}"

- name: Generate HAProxy backend
  ansible.builtin.set_fact:
    haproxy_backend: |
      {% for backend in backends %}
      {% if backend.config is defined %}
      {{ backend.config }}
      {% else %}
      backend {{ backend.backend_name }}_backend
          log global
          mode http 
          balance roundrobin
          server back {{ backend.backend_src | default(backend_src) }}:{{ backend.backend_port | default(backend_port) }} check check-sni {{ backend.domain }} sni str({{ backend.domain }})
          http-request set-header Host {{ backend.domain }}
      {% endif %}

      {% endfor %}

- name: Generate ACL config
  ansible.builtin.set_fact:
    haproxy_acl: |
      {% for backend in backends %}
          {% if backend.custom_acl is defined %}
          {{ backend.custom_acl }}
          {% else %}
      {{ backend.acl }}
          use_backend {{ backend.backend_name }}_backend if {{ backend.backend_name }}_host
          {% endif %}

      {% endfor %}

- name: Generate Proxy config
  ansible.builtin.set_fact:
    proxy_config: |
      listen proxy
        bind *:1080
        mode tcp
        server back {{ proxy_host }}:{{ proxy_port }} check
  when: proxy_host != ""

- name: Fill frontend template and save it to a variable
  ansible.builtin.set_fact:
    haproxy_frontend: "{{ lookup('template', 'files/https.j2') }}"
  # delegate_to: localhost

- name: Fill the base template and save it to /tmp/haproxy.cfg
  ansible.builtin.template:
    src: files/base.j2
    dest: /tmp/haproxy.cfg
    mode: "0644"
  # delegate_to: localhost

- name: Test the new config
  ansible.builtin.command: haproxy -c -f /tmp/haproxy.cfg
  register: haproxy_test

- name: Copy the new config to /etc/haproxy/haproxy.cfg
  become: true
  ansible.builtin.copy:
    src: /tmp/haproxy.cfg
    dest: /etc/haproxy/haproxy.cfg
    mode: "0644"
    remote_src: true
  when: haproxy_test.rc == 0
